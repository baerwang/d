name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  generation_tag:
    name: Generation Tag
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.tag.outputs.release_tag }}
    steps:
      #      - name: Generate installation access token for middle-ci app
      #        id: generate-token
      #        uses: actions/create-github-app-token@v1
      #        with:
      #          app-id: ${{ secrets.MIDDLE_CI_APP_ID }}
      #          private-key: ${{ secrets.MIDDLE_CI_APP_PRIVATE_KEY }}
      #          owner: ${{ github.repository_owner }}

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --local user.email "bot@axisnow.com"
          git config --local user.name "bot axisnow"

      - name: Generate release tag
        id: tag
        run: echo "::set-output name=release_tag::build_$(TZ='Asia/Shanghai' date +"%Y.%m.%d_%H-%M")"

      - name: Create Tag
        id: create_tag
        run: |
          git tag -a ${{ steps.tag.outputs.release_tag }} -m "Auto-generated tag from GitHub Actions"

      - name: Push Tag
        env:
          github-token: ${{ steps.generate-token.outputs.token }}
        run: git push origin ${{ steps.tag.outputs.release_tag }}

  build:
    name: Build binary
    needs: [ generation_tag ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      #      - name: Generate installation access token for middle-ci app
      #        id: generate-token
      #        uses: actions/create-github-app-token@v1
      #        with:
      #          app-id: ${{ secrets.MIDDLE_CI_APP_ID }}
      #          private-key: ${{ secrets.MIDDLE_CI_APP_PRIVATE_KEY }}
      #          owner: ${{ github.repository_owner }}
      #
      #      - name: Configure Authentication
      #        run: |
      #          export GOPRIVATE=github.com/cyberandao
      #          git config --global url.https://x-access-token:${{ steps.generate-token.outputs.token }}@github.com/cyberandao.insteadOf https://github.com/cyberandao

      - name: Set up Go
        uses: actions/setup-go@v5.0.0
        with:
          go-version: '1.21'

      - name: Release build
        run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "-s -w" -trimpath -o build/app/app

      - name: Make a deb
        run: dpkg-deb -b build ${{ needs.generation_tag.outputs.release_tag }}_amd64.deb

      - name: Calculate checksum
        run: echo $(shasum -a 256 ${{ needs.generation_tag.outputs.release_tag }}_amd64.deb | cut -f1 -d' ') >${{ needs.generation_tag.outputs.release_tag }}_amd64.deb.sha256sum

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.generation_tag.outputs.release_tag }}_amd64.deb
          path: ${{ needs.generation_tag.outputs.release_tag }}_amd64.deb

      - name: Upload checksum of artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.generation_tag.outputs.release_tag }}_amd64.deb.sha256sum
          path: ${{ needs.generation_tag.outputs.release_tag }}_amd64.deb.sha256sum

  release:
    name: Release artifacts
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          name: "Release ${{ needs.generation_tag.outputs.release_tag }}"
          tag_name: ${{ needs.generation_tag.outputs.release_tag }}
          files: |
            **/${{ needs.generation_tag.outputs.release_tag }}_amd64.deb*